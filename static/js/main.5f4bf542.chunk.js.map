{"version":3,"sources":["components/Header.module.scss","redux/action-types/repoTypes.ts","redux/reducers/reposReducers.ts","redux/reducers/rootReducers.ts","redux/store.ts","redux/action-creators/repoCreators.ts","hooks/useTypedSelector.ts","components/Header.tsx","hooks/useActions.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","ActionType","initialState","loading","error","data","reducer","state","action","type","SEARCH_REPOS","SEARCH_REPOS_SUCCESS","payload","SEARCH_REPOS_ERROR","reducers","combineReducers","repos","reposReducer","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","searchRepos","term","dispatch","a","axios","get","users","slice","map","result","message","useSelector","_useSelector","Header","inputRef","useRef","useState","setTerm","useDispatch","bindActionCreators","actionCreators","useActions","console","log","useEffect","current","focus","className","style","header__search","onSubmit","e","preventDefault","ref","value","placeholder","onChange","event","target","search__btn","search_github","search__list","list__loading","name","search__result","href","html_url","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8GACAA,EAAOC,QAAU,CAAC,eAAiB,+BAA+B,YAAc,4BAA4B,cAAgB,8BAA8B,aAAe,6BAA6B,MAAQ,sBAAsB,cAAgB,8BAA8B,eAAiB,iC,uGCDvRC,E,wFAAAA,K,4BAAAA,E,4CAAAA,E,yCAAAA,M,KCSZ,IAAMC,EAA2B,CAC7BC,SAAQ,EACRC,MAAM,KACNC,KAAM,IA4BKC,EAzBC,WAA6D,IAA5DC,EAA2D,uDAAzCL,EAAcM,EAA2B,uCACxE,OAAOA,EAAOC,MACV,KAAKR,EAAWS,aACZ,kCACOH,GADP,IAEIJ,SAAS,IAEhB,KAAKF,EAAWU,qBACZ,MAAM,CACFR,SAAQ,EACRC,MAAM,KACNC,KAAKG,EAAOI,SAEpB,KAAKX,EAAWY,mBACZ,MAAM,CACFV,SAAQ,EACRC,MAAMI,EAAOI,QACbP,KAAK,IAEb,QACI,OAAOE,IC5BLO,EAJGC,0BAAgB,CAC9BC,MAAOC,ICCEC,EAAQC,sBAAYC,EAAaC,8BAAoBC,0BAAgBC,O,kDCArEC,EAAc,SAACC,GAAD,8CAAgB,WACtCC,GADsC,mBAAAC,EAAA,6DAGzCD,EAAS,CACPjB,KAAKR,EAAWS,eAJuB,kBAOjBkB,IAAMC,IAAN,uCAA0CJ,EAA1C,WAPiB,gBAO/BpB,EAP+B,EAO/BA,KACAyB,EAAQzB,EAAK0B,MAAM,EAAG,GAAGC,KAAI,SAAEC,GAAF,OAAgBA,KACnDP,EAAS,CACLjB,KAAKR,EAAWU,qBAChBC,QAAQkB,IAXyB,kDAevCJ,EAAS,CACLjB,KAAKR,EAAWY,mBAChBD,QAAQ,KAAMsB,UAjBqB,0DAAhB,uDCFdC,EAA+CC,I,uBCsE7CC,EAlEU,WACrB,IAAMC,EAAWC,iBAAgC,MACjD,EAAwBC,mBAAS,IAAjC,mBAAOf,EAAP,KAAagB,EAAb,KACOjB,ECLgB,WACvB,IAAME,EAAWgB,cACjB,OAAOC,6BAAmBC,EAAgBlB,GDGpBmB,GAAfrB,YACP,EAA8BW,GAAY,SAAC5B,GAAD,OAAWA,EAAMS,SAApDb,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,KACvByC,QAAQC,IAAI1C,GACZ2C,qBAAU,WACJV,EAASW,SAGbX,EAASW,QAAQC,UACjB,IAeD,OACE,mCACC,gCACE,sBAAKC,UAAWC,IAAMC,eAAtB,UACE,+CACA,uBAAMC,SAjBQ,SAACC,GACtBA,EAAEC,iBACFhC,EAAYC,GACZgB,EAAQ,KAcD,UACI,uBACAhC,KAAK,OACLgD,IAAKnB,EACLoB,MAAOjC,EACPkC,YAAY,YACZC,SAjBS,SAACC,GACpBpB,EAAQoB,EAAMC,OAAOJ,UAqBX,wBAAQjD,KAAK,SAAS0C,UAAWC,IAAMW,YAAvC,0BAIN,0BAASZ,UAAWC,IAAMY,cAA1B,UACE,qBAAKb,UAAWC,IAAMa,aAAtB,SACE,qDAGD7D,GAAQ,qBAAK+C,UAAWC,IAAMhD,MAAtB,SAA8BA,IACtCD,GAAU,qBAAKgD,UAAWC,IAAMc,cAAtB,yBACT9D,IAAUD,GAAWE,EAAK2B,KAAI,SAACmC,GACjC,OACC,qBAAmBhB,UAAWC,IAAMgB,eAApC,SACE,4BAAG,mBAAGC,KAAOF,EAAKG,SAAf,SAA0BH,EAAKA,UAD1BA,EAAKI,gBE/CbC,EAVO,WACpB,OACE,cAAC,IAAD,CAAUtD,MAASA,EAAnB,SACI,qBAAKiC,UAAU,MAAf,SACE,cAAC,EAAD,SCKKsB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5f4bf542.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__search\":\"Header_header__search__IrnDs\",\"search__btn\":\"Header_search__btn__19nJt\",\"search_github\":\"Header_search_github__1Qinn\",\"search__list\":\"Header_search__list__2ePrZ\",\"error\":\"Header_error__32a49\",\"list__loading\":\"Header_list__loading__1nUu8\",\"search__result\":\"Header_search__result__3AvVs\"};","export enum ActionType {\n    SEARCH_REPOS = \"SEARCH_REPOS\",\n    SEARCH_REPOS_SUCCESS = \"SEARCH_REPOS_SUCCESS\",\n    SEARCH_REPOS_ERROR = \"SEARCH_REPOS_ERROR\"\n}","import {ActionType} from \"../action-types/repoTypes\";\nimport {Action} from \"../actions/repoActions\"\n\ninterface ReposState {\n    loading: boolean;\n    error: string | null;\n    data: string[]\n}\n\nconst initialState: ReposState = {\n    loading:false,\n    error:null,\n    data: []\n}\n\nconst reducer = (state:ReposState= initialState, action:Action):ReposState=>{\n    switch(action.type){\n        case ActionType.SEARCH_REPOS:\n            return{\n                ...state,\n                loading: true\n            };\n         case ActionType.SEARCH_REPOS_SUCCESS:\n             return{\n                 loading:false,\n                 error:null,\n                 data:action.payload,\n             };\n         case ActionType.SEARCH_REPOS_ERROR:\n             return{\n                 loading:false,\n                 error:action.payload,\n                 data:[],\n             };\n         default:\n             return state;\n    }\n    \n}\n\nexport default reducer","import {combineReducers} from \"redux\";\nimport reposReducer from \"./reposReducers\"\n\nconst reducers  = combineReducers({\n    repos: reposReducer\n})\n\nexport default reducers;\n\nexport type RootState = ReturnType<typeof reducers>;","import {createStore, applyMiddleware} from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/rootReducers\";\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\nexport default store","import axios from \"axios\"\nimport {ActionType} from  \"../action-types/repoTypes\"\nimport {Action} from \"../actions/repoActions\"\nimport { Dispatch } from \"redux\"\n\nexport const searchRepos = (term: string)=>async(\n     dispatch:Dispatch<Action>\n) =>{\n  dispatch({\n    type:ActionType.SEARCH_REPOS\n  });\n  try {\n      const{data} = await axios.get(`https://api.github.com/users/${term}/repos`)\n      const users = data.slice(0, 5).map(( result:any)=> result)\n      dispatch({\n          type:ActionType.SEARCH_REPOS_SUCCESS,\n          payload:users\n      });\n\n  }catch(error:any){\n    dispatch({\n        type:ActionType.SEARCH_REPOS_ERROR,\n        payload:error.message\n    })\n  }\n}","import {useSelector as _useSelector, TypedUseSelectorHook} from \"react-redux\"\nimport {RootState} from \"../redux\"\n\nexport const useSelector: TypedUseSelectorHook<RootState> = _useSelector","import React, {useState, useEffect, useRef, useMemo} from 'react'\nimport { useActions } from '../hooks/useActions';\nimport{useSelector} from \"../hooks/useTypedSelector\"\n// import debounce from \"lodash.debounce\"\nimport style from \"./Header.module.scss\"\n\n\nconst Header: React.FC = ()=> {\n    const inputRef = useRef<HTMLInputElement | null>(null);\n    const [term, setTerm] = useState(\"\")\n    const {searchRepos} = useActions()\n    const {loading, error, data} =useSelector((state ) =>state.repos)\n    console.log(data)\n    useEffect(()=>{\n      if(!inputRef.current){\n        return;\n      }\n      inputRef.current.focus()\n    },[])\n\n\n    const submitHandler = (e:React.FormEvent<HTMLFormElement>)=>{\n     e.preventDefault()\n     searchRepos(term)\n     setTerm(\"\")\n    }\n\n    const handleChange = (event:React.ChangeEvent<HTMLInputElement>) =>  {\n      setTerm(event.target.value)\n    }\n\n    //const debouncedChange = debounce(handleChange, 500)\n\n     return (\n       <>\n        <div> \n          <nav className={style.header__search}>\n            <h3>Github search</h3>\n            <form onSubmit={submitHandler }>\n                < input \n                type=\"text\" \n                ref={inputRef} \n                value={term} \n                placeholder=\"search...\"\n                onChange={handleChange}\n\n                //debounce after 500ms\n                // onChange={debouncedChange}\n                />\n                <button type=\"submit\" className={style.search__btn}>search</button>\n            </form>\n          </nav>\n          \n          <section className={style.search_github}>\n            <div className={style.search__list}>\n              <h2>github search app</h2> \n            </div>\n\n            {error &&<div className={style.error}>{error}</div>}\n            {loading &&<div className={style.list__loading}>Loading...</div>}\n            {!error && !loading && data.map((name:any)=>{\n            return (\n             <div key={name.id} className={style.search__result}>\n               <p><a href ={name.html_url}>{name.name}</a></p>\n            </div>\n            )   \n          })}\n          </section>\n        </div>\n        </>\n    )\n}\n\nexport default Header\n","import { useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport{actionCreators} from \"../redux\"\n\n\nexport const useActions =  () =>{\n    const dispatch = useDispatch()\n    return bindActionCreators(actionCreators, dispatch)\n}","import React from 'react';\nimport {Provider} from \"react-redux\"\nimport {store} from \"./redux/store\"\nimport Header from './components/Header';\n\nconst App: React.FC = () => {\n  return (\n    <Provider store = {store}>\n        <div className=\"App\">\n          <Header/>\n        </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}